<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.websquareproject.post.mapper.PostMapper">

    <select id="getPosts" resultType="com.example.websquareproject.post.dto.PostDto">
        SELECT
        p.post_id AS postId,
        p.display_order AS displayOrder,
        p.type,
        -- 카테고리 1d: category_id가 부모일 경우 그대로 사용, 자식일 경우 부모 이름 가져오기
        COALESCE(parent_category.category_name, child_category.category_name) AS category1,
        -- 카테고리 2d: category_id가 자식일 때만 가져오기
        CASE
        WHEN child_category.parent_id IS NOT NULL THEN child_category.category_name
        ELSE NULL
        END AS category2,
        p.title,
        p.views,
        p.is_displayed AS isDisplayed,
        p.created_at AS createdAt,
        p.created_by AS createdBy,
        p.updated_at AS updatedAt,
        p.updated_by AS updatedBy
        FROM POST p
        LEFT JOIN CATEGORY child_category ON child_category.category_id = p.category_id
        LEFT JOIN CATEGORY parent_category ON parent_category.category_id = child_category.parent_id
        WHERE 1=1

        <if test="category1 != null and category1 != ''">
            AND (parent_category.category_name = #{category1} OR child_category.category_name = #{category1})
        </if>

        <if test="category2 != null and category2 != ''">
            AND child_category.category_name = #{category2}
        </if>

        <!-- 기간 검색 -->
        <if test="periodType != null and periodType != '' and startDate != null and endDate != null">
            <choose>
                <when test="periodType == '전시시작일시'">
                    AND p.display_start BETWEEN #{startDate} AND #{endDate}
                </when>
                <when test="periodType == '전시종료일시'">
                    AND p.display_end BETWEEN #{startDate} AND #{endDate}
                </when>
                <when test="periodType == '수정일시'">
                    AND p.updated_at BETWEEN #{startDate} AND #{endDate}
                </when>
                <when test="periodType == '등록일시'">
                    AND p.created_at BETWEEN #{startDate} AND #{endDate}
                </when>
            </choose>
        </if>

        <!-- 전시 여부 -->
        <if test="isDisplayed != null and isDisplayed != '' and isDisplayed != '전체'">
            AND p.is_displayed = #{isDisplayed}
        </if>

        <!-- 검색 조건 -->
        <if test="keyword != null and keyword != ''">
            <choose>
                <when test="searchType == '등록자'">
                    AND p.created_by LIKE CONCAT('%', #{keyword}, '%')
                </when>
                <when test="searchType == '수정자'">
                    AND p.updated_by LIKE CONCAT('%', #{keyword}, '%')
                </when>
                <when test="searchType == '내용'">
                    AND p.content LIKE CONCAT('%', #{keyword}, '%')
                </when>
                <when test="searchType == '제목'">
                    AND p.title LIKE CONCAT('%', #{keyword}, '%')
                </when>
                <otherwise>
                    AND (p.title LIKE CONCAT('%', #{keyword}, '%')
                    OR p.content LIKE CONCAT('%', #{keyword}, '%')
                    OR p.created_by LIKE CONCAT('%', #{keyword}, '%')
                    OR p.updated_by LIKE CONCAT('%', #{keyword}, '%'))
                </otherwise>
            </choose>
        </if>

        ORDER BY
            CASE
                WHEN p.display_order IS NULL THEN 1  -- display_order가 NULL이면 맨 뒤로 보냄
                ELSE 0
            END,
            p.display_order ASC,  -- display_order가 있는 경우 오름차순 정렬
            p.created_at DESC      -- 같은 순서일 경우 최신 등록일 순으로 정렬
        LIMIT #{size} OFFSET #{offset}
    </select>

</mapper>
